/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AddressView } from "./addressview";
import { InStoreShipment } from "./instoreshipment";
import { Expose, Type } from "class-transformer";

export enum InStoreShipment2DistanceUnit {
    Mile = "mile",
    Km = "km",
}

/**
 * A cart that is being prepared for shipment
 */
export class InStoreShipment2 extends SpeakeasyBase {
    /**
     * The address object returned in the response.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "address" })
    @Type(() => AddressView)
    address?: AddressView;

    @SpeakeasyMetadata()
    @Expose({ name: "distance" })
    distance?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "distance_unit" })
    distanceUnit?: InStoreShipment2DistanceUnit;

    /**
     * A cart that is being prepared for shipment
     */
    @SpeakeasyMetadata()
    @Expose({ name: "shipment" })
    @Type(() => InStoreShipment)
    shipment?: InStoreShipment;

    @SpeakeasyMetadata()
    @Expose({ name: "store_name" })
    storeName?: string;
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EmailView } from "./emailview";
import { LoginView } from "./loginview";
import { PhoneView } from "./phoneview";
import { Expose, Type } from "class-transformer";

export enum ConsumerSelfViewPlatformAccountStatus {
    None = "none",
    Linked = "linked",
    Unlinked = "unlinked",
}

export class ConsumerSelfView extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "authentication" })
    @Type(() => LoginView)
    authentication?: LoginView;

    @SpeakeasyMetadata()
    @Expose({ name: "email_verified" })
    emailVerified?: boolean;

    @SpeakeasyMetadata({ elemType: EmailView })
    @Expose({ name: "emails" })
    @Type(() => EmailView)
    emails?: EmailView[];

    @SpeakeasyMetadata()
    @Expose({ name: "first_name" })
    firstName?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "last_name" })
    lastName?: string;

    @SpeakeasyMetadata({ elemType: PhoneView })
    @Expose({ name: "phones" })
    @Type(() => PhoneView)
    phones?: PhoneView[];

    @SpeakeasyMetadata()
    @Expose({ name: "platform_account_status" })
    platformAccountStatus?: ConsumerSelfViewPlatformAccountStatus;
}

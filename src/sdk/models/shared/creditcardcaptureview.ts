/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AmountView } from "./amountview";
import { CaptureStatus } from "./capturestatus";
import { TransactionSplitsView } from "./transactionsplitsview";
import { Expose, Type } from "class-transformer";

export class CreditCardCaptureView extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "amount" })
    @Type(() => AmountView)
    amount?: AmountView;

    /**
     * The unique ID for the capture. **Nullable** for Transactions Details.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * The reference ID associated with a transaction event (auth, capture, refund, void). This is an arbitrary identifier created by the merchant. Bolt does not enforce any uniqueness constraints on this ID. It is up to the merchant to generate identifiers that properly fulfill its needs.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "merchant_event_id" })
    merchantEventId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "metadata" })
    metadata?: Record<string, string>;

    @SpeakeasyMetadata()
    @Expose({ name: "splits" })
    @Type(() => TransactionSplitsView)
    splits?: TransactionSplitsView;

    /**
     * The status of the capture. **Nullable** for Transactions Details.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: CaptureStatus;
}

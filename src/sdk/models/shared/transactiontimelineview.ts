/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AddressChangeView } from "./addresschangeview";
import { AmountView } from "./amountview";
import { ConsumerSummaryView } from "./consumersummaryview";
import { TransactionReviewView } from "./transactionreviewview";
import { TransactionView } from "./transactionview";
import { Expose, Type } from "class-transformer";

export enum TransactionTimelineViewType {
    Completed = "completed",
    Authorized = "authorized",
    Review = "review",
    Note = "note",
    Voided = "voided",
    Captured = "captured",
    Credited = "credited",
    AddressChange = "address_change",
}

export class TransactionTimelineView extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "address_change" })
    @Type(() => AddressChangeView)
    addressChange?: AddressChangeView;

    @SpeakeasyMetadata()
    @Expose({ name: "amount" })
    @Type(() => AmountView)
    amount?: AmountView;

    @SpeakeasyMetadata()
    @Expose({ name: "consumer" })
    @Type(() => ConsumerSummaryView)
    consumer?: ConsumerSummaryView;

    @SpeakeasyMetadata()
    @Expose({ name: "date" })
    date?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "note" })
    note?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "review" })
    @Type(() => TransactionReviewView)
    review?: TransactionReviewView;

    @SpeakeasyMetadata()
    @Expose({ name: "transaction" })
    @Type(() => TransactionView)
    transaction?: TransactionView;

    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: TransactionTimelineViewType;

    @SpeakeasyMetadata()
    @Expose({ name: "visibility" })
    visibility?: string;
}

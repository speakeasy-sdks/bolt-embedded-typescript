/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Address } from "./address";
import { CartShipment } from "./cartshipment";
import { Expose, Type } from "class-transformer";

export enum InStoreCartShipmentDistanceUnit {
    Km = "km",
    Mile = "mile",
}

export class InStoreCartShipment extends SpeakeasyBase {
    /**
     * A cart that is being prepared for shipment
     */
    @SpeakeasyMetadata()
    @Expose({ name: "cart_shipment" })
    @Type(() => CartShipment)
    cartShipment?: CartShipment;

    /**
     * Shipment option description.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "distance" })
    distance?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "distance_unit" })
    distanceUnit?: InStoreCartShipmentDistanceUnit;

    /**
     * The Address object is used for billing, shipping, and physical store address use cases.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "in_store_pickup_address" })
    @Type(() => Address)
    inStorePickupAddress?: Address;

    @SpeakeasyMetadata()
    @Expose({ name: "pickup_window_close" })
    pickupWindowClose?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "pickup_window_open" })
    pickupWindowOpen?: number;

    /**
     * The local store's name where the item can be picked up.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "store_name" })
    storeName?: string;
}

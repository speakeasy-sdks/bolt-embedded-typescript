/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Address } from "./address";
import { CartCreate } from "./cartcreate";
import { CreditCard } from "./creditcard";
import { UserIdentifier } from "./useridentifier";
import { UserIdentity } from "./useridentity";
import { Expose, Type } from "class-transformer";

/**
 * Determines who initiated the transaction (e.g. shopper, merchant) and how they did it (e.g. recurring subscription, on-file card).
 *
 * @remarks
 *
 * * `initial_card_on_file` - The first transaction made for a card. The system then saves this card for future transactions.
 * * `initial_recurring` - The first time any card is used to pay for a recurring charge. For example, a subscription.
 * * `stored_cardholder_initiated` - The subsequent (second, third, etc.) transactions a shopper initiates with a stored card. This includes every situation during which a cardholder requests a charge, for example if the cardholder requests a merchant charge their card.
 * * `stored_merchant_initiated` - The subsequent (second, third, etc.) transactions a merchant initiates with a stored card only when the cardholder does not request the charge. For example, when a customer service representative buys on behalf of a shopper or when a business adds funds to a public transit card.
 * * `following_recurring` - The subsequent (second, third, etc.) transactions  a card is used to pay for a recurring charge. For example, a subscription.
 * * `cardholder_initiated` - When a cardholder begins a transaction that isn’t stored in Bolt and won’t be stored in Bolt for future transactions.
 * * `recurring` - Any time a card is used to pay for a recurring charge (for example, a subscription). Only use this value when you don’t know if it’s the first recurring charge.
 *
 */
export enum MerchantCreditCardAuthorizationProcessingInitiator {
    InitialCardOnFile = "initial_card_on_file",
    InitialRecurring = "initial_recurring",
    StoredCardholderInitiated = "stored_cardholder_initiated",
    StoredMerchantInitiated = "stored_merchant_initiated",
    FollowingRecurring = "following_recurring",
    CardholderInitiated = "cardholder_initiated",
    Recurring = "recurring",
}

export enum MerchantCreditCardAuthorizationSource {
    DirectPayments = "direct_payments",
}

/**
 * This request is used for authorizing a new, unsaved card.
 */
export class MerchantCreditCardAuthorization extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "auto_capture" })
    autoCapture?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "cart" })
    @Type(() => CartCreate)
    cart: CartCreate;

    /**
     * If `true`, the guest shopper is provided a Bolt Account using their email address as its unique ID; if `false`, no information is saved at checkout.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "create_bolt_account" })
    createBoltAccount: boolean;

    /**
     * The credit_card object is used to to pay for guest-checkout transactions or save payment method details to an account. Once saved, you can reference the credit card with the associated `credit_card_id` for future transactions. Add `billing_address` to this if storing a billing address for a returning shopper.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "credit_card" })
    @Type(() => CreditCard)
    creditCard: CreditCard;

    /**
     * The unique ID associated to the merchant's Bolt Account division; Merchants can have different divisions to suit multiple use cases (storefronts, pay-by-link, phone order processing). Use the Bolt Merchant Dashboard to switch between divisions and find the division ID under `Merchant Division Public ID`.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "division_id" })
    divisionId: string;

    /**
     * The reference ID associated with a transaction event (auth, capture, refund, void). This is an arbitrary identifier created by the merchant. Bolt does not enforce any uniqueness constraints on this ID. It is up to the merchant to generate identifiers that properly fulfill its needs.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "merchant_event_id" })
    merchantEventId?: string;

    /**
     * The unique ID associated with to the shopper's previous subscription-based transaction. Leave `null` for standard, non-subscription transactions.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "previous_transaction_id" })
    previousTransactionId?: string;

    /**
     * Determines who initiated the transaction (e.g. shopper, merchant) and how they did it (e.g. recurring subscription, on-file card).
     *
     * @remarks
     *
     * * `initial_card_on_file` - The first transaction made for a card. The system then saves this card for future transactions.
     * * `initial_recurring` - The first time any card is used to pay for a recurring charge. For example, a subscription.
     * * `stored_cardholder_initiated` - The subsequent (second, third, etc.) transactions a shopper initiates with a stored card. This includes every situation during which a cardholder requests a charge, for example if the cardholder requests a merchant charge their card.
     * * `stored_merchant_initiated` - The subsequent (second, third, etc.) transactions a merchant initiates with a stored card only when the cardholder does not request the charge. For example, when a customer service representative buys on behalf of a shopper or when a business adds funds to a public transit card.
     * * `following_recurring` - The subsequent (second, third, etc.) transactions  a card is used to pay for a recurring charge. For example, a subscription.
     * * `cardholder_initiated` - When a cardholder begins a transaction that isn’t stored in Bolt and won’t be stored in Bolt for future transactions.
     * * `recurring` - Any time a card is used to pay for a recurring charge (for example, a subscription). Only use this value when you don’t know if it’s the first recurring charge.
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "processing_initiator" })
    processingInitiator?: MerchantCreditCardAuthorizationProcessingInitiator;

    /**
     * The Address object is used for billing, shipping, and physical store address use cases.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "shipping_address" })
    @Type(() => Address)
    shippingAddress?: Address;

    @SpeakeasyMetadata()
    @Expose({ name: "source" })
    source: MerchantCreditCardAuthorizationSource;

    /**
     * The object containing key lookup IDs associated with the shopper's account, such as the unique email address and phone number.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "user_identifier" })
    @Type(() => UserIdentifier)
    userIdentifier: UserIdentifier;

    @SpeakeasyMetadata()
    @Expose({ name: "user_identity" })
    @Type(() => UserIdentity)
    userIdentity: UserIdentity;
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Address } from "./address";
import { CartAddOn } from "./cartaddon";
import { CartDiscount } from "./cartdiscount";
import { CartItem } from "./cartitem";
import { CartLoyaltyRewards } from "./cartloyaltyrewards";
import { CartShipment } from "./cartshipment";
import { InStoreCartShipment } from "./instorecartshipment";
import { Expose, Type } from "class-transformer";

export class CartCreateFees extends SpeakeasyBase {
    /**
     * Description of the fee that will appear in the tooltip if the mouse hovers over the fee.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    /**
     * Name of the fee that will appear in the order ledger.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "quantity" })
    quantity: number;

    /**
     * Unique reference used to identify the fee.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "reference" })
    reference: string;

    @SpeakeasyMetadata()
    @Expose({ name: "unit_price" })
    unitPrice: number;

    @SpeakeasyMetadata()
    @Expose({ name: "unit_tax_amount" })
    unitTaxAmount: number;
}

export class CartCreateFulfillmentsDigitalDelivery extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "email" })
    email?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "phone" })
    phone?: string;
}

export enum CartCreateFulfillmentsType {
    PhysicalDoorDelivery = "physical_door_delivery",
    PhysicalShipToStore = "physical_ship_to_store",
    PhysicalInStorePickup = "physical_in_store_pickup",
    DigitalDownload = "digital_download",
    DigitalNoDelivery = "digital_no_delivery",
}

/**
 * Defines the shipments associated with the cart items.
 */
export class CartCreateFulfillments extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: CartItem })
    @Expose({ name: "cart_items" })
    @Type(() => CartItem)
    cartItems?: CartItem[];

    /**
     * A cart that is being prepared for shipment
     */
    @SpeakeasyMetadata()
    @Expose({ name: "cart_shipment" })
    @Type(() => CartShipment)
    cartShipment?: CartShipment;

    @SpeakeasyMetadata()
    @Expose({ name: "digital_delivery" })
    @Type(() => CartCreateFulfillmentsDigitalDelivery)
    digitalDelivery?: CartCreateFulfillmentsDigitalDelivery;

    @SpeakeasyMetadata()
    @Expose({ name: "in_store_cart_shipment" })
    @Type(() => InStoreCartShipment)
    inStoreCartShipment?: InStoreCartShipment;

    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: CartCreateFulfillmentsType;
}

/**
 * The base_cart object contains the core details typically found in most cart objects, including items, discounts, amount totals, shipments, and in-store pickups.
 */
export class CartCreate extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: CartAddOn })
    @Expose({ name: "add_ons" })
    @Type(() => CartAddOn)
    addOns?: CartAddOn[];

    /**
     * The Address object is used for billing, shipping, and physical store address use cases.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "billing_address" })
    @Type(() => Address)
    billingAddress?: Address;

    /**
     * Used to provide a link to the cart ID.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "cart_url" })
    cartUrl?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "currency" })
    currency: string;

    @SpeakeasyMetadata({ elemType: CartDiscount })
    @Expose({ name: "discounts" })
    @Type(() => CartDiscount)
    discounts?: CartDiscount[];

    /**
     * This field, although required, can be an empty string.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "display_id" })
    displayId?: string;

    @SpeakeasyMetadata({ elemType: CartCreateFees })
    @Expose({ name: "fees" })
    @Type(() => CartCreateFees)
    fees?: CartCreateFees[];

    @SpeakeasyMetadata({ elemType: CartCreateFulfillments })
    @Expose({ name: "fulfillments" })
    @Type(() => CartCreateFulfillments)
    fulfillments?: CartCreateFulfillments[];

    @SpeakeasyMetadata({ elemType: InStoreCartShipment })
    @Expose({ name: "in_store_cart_shipments" })
    @Type(() => InStoreCartShipment)
    inStoreCartShipments?: InStoreCartShipment[];

    /**
     * The list of items associated with the cart.
     */
    @SpeakeasyMetadata({ elemType: CartItem })
    @Expose({ name: "items" })
    @Type(() => CartItem)
    items?: CartItem[];

    @SpeakeasyMetadata({ elemType: CartLoyaltyRewards })
    @Expose({ name: "loyalty_rewards" })
    @Type(() => CartLoyaltyRewards)
    loyaltyRewards?: CartLoyaltyRewards[];

    /**
     * Optional custom metadata.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "metadata" })
    metadata?: Record<string, string>;

    /**
     * Used optionally to pass additional information like order numbers or other IDs as needed.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "order_description" })
    orderDescription?: string;

    /**
     * This value is used by Bolt as an external reference to a given order. This reference must be unique per successful transaction.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "order_reference" })
    orderReference: string;

    @SpeakeasyMetadata({ elemType: CartShipment })
    @Expose({ name: "shipments" })
    @Type(() => CartShipment)
    shipments?: CartShipment[];

    /**
     * The total tax amount for all of the items associated with the cart.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "tax_amount" })
    taxAmount?: number;

    /**
     * The total amount, in cents, of the cart including its items and taxes (if applicable), e.g. $9.00 is 900. This total must match the sum of all other amounts.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "total_amount" })
    totalAmount: number;
}

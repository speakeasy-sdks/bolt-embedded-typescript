/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AmountView } from "./amountview";
import { CaptureStatus } from "./capturestatus";
import { Expose, Type } from "class-transformer";

/**
 * Fee type options. **Nullable** for Transactions Details.
 *
 * @remarks
 *
 */
export enum CaptureSplitsType {
    Net = "net",
    ProcessingFee = "processing_fee",
    RiskFee = "risk_fee",
    ApmFee = "apm_fee",
    NetworkFee = "network_fee",
    PlatformFee = "platform_fee",
    BoltAccountFee = "bolt_account_fee",
}

/**
 * A split of fees by type and amount.
 */
export class CaptureSplits extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "amount" })
    @Type(() => AmountView)
    amount?: AmountView;

    /**
     * Fee type options. **Nullable** for Transactions Details.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: CaptureSplitsType;
}

/**
 * Deprecated. Use `captures`.
 */
export class Capture extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "amount" })
    @Type(() => AmountView)
    amount?: AmountView;

    /**
     * The unique ID for the capture. **Nullable** for Transactions Details.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * The reference ID associated with a transaction event (auth, capture, refund, void). This is an arbitrary identifier created by the merchant. Bolt does not enforce any uniqueness constraints on this ID. It is up to the merchant to generate identifiers that properly fulfill its needs.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "merchant_event_id" })
    merchantEventId?: string;

    /**
     * Additional information about the capture. For example, the processor capture ID. **Nullable** for Transactions Details.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "metadata" })
    metadata?: Record<string, string>;

    /**
     * A split of fees by type and amount. **Nullable** for Transactions Details.
     */
    @SpeakeasyMetadata({ elemType: CaptureSplits })
    @Expose({ name: "splits" })
    @Type(() => CaptureSplits)
    splits?: CaptureSplits[];

    /**
     * The status of the capture. **Nullable** for Transactions Details.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: CaptureStatus;
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Specifies why this particular transaction is voided.
 */
export enum Cause {
    MerchantAction = "merchant_action",
    PaypalSync = "paypal_sync",
    AmazonPaySync = "amazon_pay_sync",
    IrreversibleReject = "irreversible_reject",
    AuthExpire = "auth_expire",
    AuthVerificationExpired = "auth_verification_expired",
    PaymentMethodUpdater = "payment_method_updater",
    LessThanNilGreaterThan = "<nil>",
}

/**
 * The status of the void request.
 */
export enum Status {
    Succeeded = "succeeded",
    Declined = "declined",
    Error = "error",
}

export class Void extends SpeakeasyBase {
    /**
     * Specifies why this particular transaction is voided.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "cause" })
    cause?: Cause;

    /**
     * The reference ID associated with a transaction event (auth, capture, refund, void). This is an arbitrary identifier created by the merchant. Bolt does not enforce any uniqueness constraints on this ID. It is up to the merchant to generate identifiers that properly fulfill its needs.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "merchant_event_id" })
    merchantEventId?: string;

    /**
     * The status of the void request.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: Status;

    /**
     * The void ID returned from the payment processor.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "void" })
    void?: string;
}

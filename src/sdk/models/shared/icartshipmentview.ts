/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AddressView } from "./addressview";
import { AmountView } from "./amountview";
import { GiftOptionView } from "./giftoptionview";
import { IDescriptionPart } from "./idescriptionpart";
import { IDescriptionTooltip } from "./idescriptiontooltip";
import { IWeight } from "./iweight";
import { Expose, Transform, Type } from "class-transformer";

export class ICartShipmentViewPackageDimension extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "depth" })
    depth?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "height" })
    height?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "unit" })
    unit?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "width" })
    width?: number;
}

export class ICartShipmentView extends SpeakeasyBase {
    /**
     * The carrier used to deliver the shipment.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "carrier" })
    carrier?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "cost" })
    @Type(() => AmountView)
    cost?: AmountView;

    @SpeakeasyMetadata()
    @Expose({ name: "default" })
    default?: boolean;

    @SpeakeasyMetadata({ elemType: IDescriptionPart })
    @Expose({ name: "description" })
    @Type(() => IDescriptionPart)
    description?: IDescriptionPart[];

    @SpeakeasyMetadata({ elemType: IDescriptionTooltip })
    @Expose({ name: "description_tooltips" })
    @Type(() => IDescriptionTooltip)
    descriptionTooltips?: IDescriptionTooltip[];

    @SpeakeasyMetadata()
    @Expose({ name: "estimated_delivery_date" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    estimatedDeliveryDate?: Date;

    /**
     * Used to determine whether a shipment has been expedited or not.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "expedited" })
    expedited?: boolean;

    /**
     * Defines which gift options are hidden.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "gift_options" })
    @Type(() => GiftOptionView)
    giftOptions?: GiftOptionView;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "package_dimension" })
    @Type(() => ICartShipmentViewPackageDimension)
    packageDimension?: ICartShipmentViewPackageDimension;

    @SpeakeasyMetadata()
    @Expose({ name: "package_type" })
    packageType?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "package_weight" })
    @Type(() => IWeight)
    packageWeight?: IWeight;

    @SpeakeasyMetadata()
    @Expose({ name: "reference" })
    reference?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "service" })
    service?: string;

    /**
     * The address object returned in the response.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "shipping_address" })
    @Type(() => AddressView)
    shippingAddress?: AddressView;

    @SpeakeasyMetadata()
    @Expose({ name: "shipping_method" })
    shippingMethod?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "signature" })
    signature?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "tax_amount" })
    @Type(() => AmountView)
    taxAmount?: AmountView;

    @SpeakeasyMetadata()
    @Expose({ name: "total_weight" })
    @Type(() => IWeight)
    totalWeight?: IWeight;

    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: string;
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class UpdatePaymentSecurity extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "security, scheme=true;type=oauth2;name=Authorization" })
    oAuth?: string;

    @SpeakeasyMetadata({ data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Key" })
    xAPIKey?: string;
}

/**
 * Identification information for the Shopper. This is only required when creating a new Bolt account.
 */
export class UpdatePaymentRequestBodyShopperIdentity extends SpeakeasyBase {
    /**
     * determines whether to create a bolt account for this shopper
     */
    @SpeakeasyMetadata()
    @Expose({ name: "create_bolt_account" })
    createBoltAccount?: boolean;

    /**
     * Email address of the shopper
     */
    @SpeakeasyMetadata()
    @Expose({ name: "email" })
    email: string;

    /**
     * First name of the shopper
     */
    @SpeakeasyMetadata()
    @Expose({ name: "first_name" })
    firstName: string;

    /**
     * Last name of the shopper
     */
    @SpeakeasyMetadata()
    @Expose({ name: "last_name" })
    lastName: string;

    /**
     * Phone number of the shopper
     */
    @SpeakeasyMetadata()
    @Expose({ name: "phone" })
    phone: string;
}

export class UpdatePaymentRequestBody extends SpeakeasyBase {
    /**
     * The details of the cart being purchased with this payment.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "cart" })
    @Type(() => shared.CartCreate)
    cart?: shared.CartCreate;

    /**
     * Identification information for the Shopper. This is only required when creating a new Bolt account.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "shopper_identity" })
    @Type(() => UpdatePaymentRequestBodyShopperIdentity)
    shopperIdentity?: UpdatePaymentRequestBodyShopperIdentity;
}

export class UpdatePaymentRequest extends SpeakeasyBase {
    /**
     * A key created by merchants that ensures `POST` and `PATCH` requests are only performed once. [Read more about Idempotent Requests here](/developers/references/idempotency/).
     */
    @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Idempotency-Key" })
    idempotencyKey?: string;

    @SpeakeasyMetadata({ data: "request, media_type=application/json" })
    requestBody?: UpdatePaymentRequestBody;

    /**
     * The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED].
     */
    @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=X-Publishable-Key" })
    xPublishableKey?: string;

    /**
     * The ID received in the initial v1/payments request.
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
    id: string;
}

/**
 * The current payment status.
 */
export enum UpdatePayment200ApplicationJSONStatus {
    AwaitingUserConfirmation = "awaiting_user_confirmation",
    PaymentReady = "payment_ready",
    Success = "success",
}

/**
 * Payment updated.
 */
export class UpdatePayment200ApplicationJSON extends SpeakeasyBase {
    /**
     * The ID for a Payment Attempt
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * The current payment status.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: UpdatePayment200ApplicationJSONStatus;
}

export class UpdatePaymentResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * Payment updated.
     */
    @SpeakeasyMetadata()
    updatePayment200ApplicationJSONObject?: UpdatePayment200ApplicationJSON;
}
